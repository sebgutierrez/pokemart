generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Item {
  id              Int            @id @default(autoincrement())
  name            String         @unique
  category        String
  description     String
  buyPrice        Int
  sellPrice       Int
  debutGeneration String
  cssClass        String         @unique
  itemBags        ItemBag[]
  cartItems       CartItem[]
  orderDetails    OrderDetails[]
}

model Trainer {
  id          Int      @id @default(autoincrement())
  username    String   @unique
  password    String
  region      String?
  pokeDollars Int      @default(5000)
  createdAt   DateTime @default(now())
  itemBag     ItemBag?
  cartItems   CartItem[]
  orders      Order[]
}

model ItemBag {
  id        Int     @id @default(autoincrement())
  quantity  Int
  itemId    Int
  trainerId Int     @unique
  trainer   Trainer @relation(fields: [trainerId], references: [id], onDelete: Cascade)
  item      Item    @relation(fields: [itemId], references: [id])
}

model CartItem {
  id            Int      @id @default(autoincrement())
  quantity      Int
  itemId        Int
  trainerId     Int      
  trainer       Trainer  @relation(fields: [trainerId], references: [id], onDelete: Cascade)
  item          Item     @relation(fields: [itemId], references: [id])
  createdAt     DateTime @default(now())
}

model Order {
  id           Int     @id @default(autoincrement())
  trainerId    Int 
  trainer      Trainer @relation(fields: [trainerId], references: [id], onDelete: Cascade)
  numItems     Int
  region       String
  city         String
  total        Int
  date         DateTime
  orderDetails OrderDetails[]
}

model OrderDetails {
  id       Int   @id @default(autoincrement())
  orderId  Int
  order    Order @relation(fields: [orderId], references: [id])
  itemId   Int
  item     Item  @relation(fields: [itemId], references: [id])
  quantity Int
} 